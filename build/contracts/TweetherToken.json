{
  "contractName": "TweetherToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FOR_FOUNDER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FOR_ICO",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ownerAddr",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_icoAddr",
          "type": "address"
        }
      ],
      "name": "fundICO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FOR_FOUNDER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FOR_ICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoAddr\",\"type\":\"address\"}],\"name\":\"fundICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/token/TweetherToken.sol\":\"TweetherToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/helpers/Owned.sol\":{\"keccak256\":\"0x64c66b516a834e0a8e469b1d2dcf1839abbaf05bc340aef78f1c643012234c20\",\"urls\":[\"bzzr://032ccc3fd85e699a41a05c3e7b9447accedc74163b4578175e96262c24534b21\",\"dweb:/ipfs/QmXi5p9PKktiy6EHjSz9q31sz57kLyspwEVy56Q5DU3mHF\"]},\"project:/contracts/token/TweetherToken.sol\":{\"keccak256\":\"0x4ed1d510337e0d985298754d7a3360fb3b19e3ea3e719d8c4ed8fa4f94c0c17e\",\"urls\":[\"bzzr://636e9634112b15388a6babb1d18b250912006a17f2dea8de9306e3269ec024ae\",\"dweb:/ipfs/QmZ3jDUP5acaE1TpRh627tskDcCxukzBFX7zKWkLLeFZ5b\"]},\"zeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x2ec1a15ebaea5ce73f02603c4f8905f48bd45f30bb21b8b22a872c4d0ff5c534\",\"urls\":[\"bzzr://54931b9134d973caf7c1b54bdd0b126e0af380163b3ab28137a2f4536d01d72d\",\"dweb:/ipfs/QmXQ4aa8XvFprSXGgxXxRBbPcKFJbFdLx1smoof85nGJW9\"]},\"zeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xc052dbbb09ef76ca016df5a95693f9b312902b65df5b410e91498fc10869231b\",\"urls\":[\"bzzr://ded7c90cd0de8593389ac7672e5a4a2b63a3b88b02f1d1e92b0e0eeea3914e67\",\"dweb:/ipfs/QmX1uZWj6apZnLy6WUzxnUYiX3h2NwMDiMZLZAiXaGXzpj\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3b6aeb6fe0bc01a2960710dd399f9e60fb514ce20c8069d463458add8280db8c\",\"urls\":[\"bzzr://e8dd8fb724f12cf3b908e960b85f15edc0b34632d56d40d841d0d564c670ac34\",\"dweb:/ipfs/QmPLtaoWy9yLDMnjoqhAj2J9i713S3kgKHdMmyJAXfGt2w\"]},\"zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x6d3f92e92d1cc0cbde5af360c2c1feb899a6c9349c2c444083c502ab1309d398\",\"urls\":[\"bzzr://4c0ce2a28d7f3b58c2507ce80933c474aef9a358a1e9a0eb07923edc20a3f84e\",\"dweb:/ipfs/QmXyK9X4T6QSXKUSVU2XBpySo93MUUXb1GwrTbasXyraZE\"]},\"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0x17138e6f4dba00e3812683b144579f20af99a331d8087a69491e939874126e47\",\"urls\":[\"bzzr://dccd897024c604840b54351fdc3dd292add830608280c3e5cf2097198f3c5f20\",\"dweb:/ipfs/QmX9Qu5idqGHL1to29B7V9WqsjLf3Vv6j2tw9tevDG4Erf\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600d81526020017f5477656574686572546f6b656e00000000000000000000000000000000000000815250600490805190602001906200005192919062000171565b506040518060400160405280600381526020017f5457450000000000000000000000000000000000000000000000000000000000815250600590805190602001906200009f92919062000171565b506000600660006101000a81548160ff021916908360ff160217905550620b71b06007556203d090600855348015620000d757600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754600854016001819055506001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000220565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b457805160ff1916838001178555620001e5565b82800160010185558215620001e5579182015b82811115620001e4578251825591602001919060010190620001c7565b5b509050620001f49190620001f8565b5090565b6200021d91905b8082111562000219576000816000905550600101620001ff565b5090565b90565b61159a80620002306000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063cd36793611610066578063cd367936146104e3578063d73dd62314610527578063dd62ed3e1461058d578063f2fde38b1461060557610100565b806370a082311461035857806395d89b41146103b05780639c675eaa14610433578063a9059cbb1461047d57610100565b806323b872dd116100d357806323b872dd1461022a578063313ce567146102b057806332a52fcd146102d457806366188463146102f257610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee578063229233b61461020c575b600080fd5b61010d610649565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e7565b604051808215151515815260200191505060405180910390f35b6101f66107d9565b6040518082815260200191505060405180910390f35b6102146107e3565b6040518082815260200191505060405180910390f35b6102966004803603606081101561024057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107e9565b604051808215151515815260200191505060405180910390f35b6102b8610b9e565b604051808260ff1660ff16815260200191505060405180910390f35b6102dc610bb1565b6040518082815260200191505060405180910390f35b61033e6004803603604081101561030857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bb7565b604051808215151515815260200191505060405180910390f35b61039a6004803603602081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e47565b6040518082815260200191505060405180910390f35b6103b8610e8f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103f85780820151818401526020810190506103dd565b50505050905090810190601f1680156104255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61043b610f2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c96004803603604081101561049357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f53565b604051808215151515815260200191505060405180910390f35b610525600480360360208110156104f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061116f565b005b6105736004803603604081101561053d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111d9565b604051808215151515815260200191505060405180910390f35b6105ef600480360360408110156105a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d5565b6040518082815260200191505060405180910390f35b6106476004803603602081101561061b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061145c565b005b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60085481565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561083657600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156108bf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108f957600080fd5b61094a826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153490919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109dd826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aae82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153490919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600660009054906101000a900460ff1681565b60075481565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310610cc7576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d5b565b610cda838261153490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610fa057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fda57600080fd5b61102b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110be826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111c957600080fd5b6111d581600754610f53565b5050565b600061126a82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114f057600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008282111561154057fe5b818303905092915050565b600081830190508281101561155c57fe5b8090509291505056fea265627a7a7230582033a819ad138d68e2d6b9e224f065742ddada8039ee3a0614f43d54038dc8792a64736f6c634300050a0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063cd36793611610066578063cd367936146104e3578063d73dd62314610527578063dd62ed3e1461058d578063f2fde38b1461060557610100565b806370a082311461035857806395d89b41146103b05780639c675eaa14610433578063a9059cbb1461047d57610100565b806323b872dd116100d357806323b872dd1461022a578063313ce567146102b057806332a52fcd146102d457806366188463146102f257610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee578063229233b61461020c575b600080fd5b61010d610649565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e7565b604051808215151515815260200191505060405180910390f35b6101f66107d9565b6040518082815260200191505060405180910390f35b6102146107e3565b6040518082815260200191505060405180910390f35b6102966004803603606081101561024057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107e9565b604051808215151515815260200191505060405180910390f35b6102b8610b9e565b604051808260ff1660ff16815260200191505060405180910390f35b6102dc610bb1565b6040518082815260200191505060405180910390f35b61033e6004803603604081101561030857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bb7565b604051808215151515815260200191505060405180910390f35b61039a6004803603602081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e47565b6040518082815260200191505060405180910390f35b6103b8610e8f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103f85780820151818401526020810190506103dd565b50505050905090810190601f1680156104255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61043b610f2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c96004803603604081101561049357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f53565b604051808215151515815260200191505060405180910390f35b610525600480360360208110156104f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061116f565b005b6105736004803603604081101561053d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111d9565b604051808215151515815260200191505060405180910390f35b6105ef600480360360408110156105a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d5565b6040518082815260200191505060405180910390f35b6106476004803603602081101561061b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061145c565b005b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60085481565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561083657600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156108bf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108f957600080fd5b61094a826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153490919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109dd826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aae82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153490919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600660009054906101000a900460ff1681565b60075481565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310610cc7576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d5b565b610cda838261153490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610fa057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fda57600080fd5b61102b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153490919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110be826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111c957600080fd5b6111d581600754610f53565b5050565b600061126a82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461154b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156114f057600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008282111561154057fe5b818303905092915050565b600081830190508281101561155c57fe5b8090509291505056fea265627a7a7230582033a819ad138d68e2d6b9e224f065742ddada8039ee3a0614f43d54038dc8792a64736f6c634300050a0032",
  "sourceMap": "126:515:2:-;;;179:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;221:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;279:1;255:25;;;;;;;;;;;;;;;;;;;;312:6;287:31;;353:6;324:35;;366:119;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:119:2;121:10:0;109:9;;:22;;;;;;;;;;;;;;;;;;426:7:2;;412:11;;:21;397:12;:36;;;;466:12;;443:8;:20;452:10;443:20;;;;;;;;;;;;;;;:35;;;;126:515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "126:515:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:515:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;179:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;179:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:188:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1877:188:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;451:83:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;324:35:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;789:470:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;789:470:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;255:25:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;287:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3742:432:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3742:432:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1211:99:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1211:99:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;221:28:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;221:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;688:321:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;688:321:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;543:96:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;543:96:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;2989:296:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2989:296:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2384:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2384:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;230:187:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;230:187:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;179:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1877:188:7:-;1944:4;1988:6;1956:7;:19;1964:10;1956:19;;;;;;;;;;;;;;;:29;1976:8;1956:29;;;;;;;;;;;;;;;:38;;;;2026:8;2005:38;;2014:10;2005:38;;;2036:6;2005:38;;;;;;;;;;;;;;;;;;2056:4;2049:11;;1877:188;;;;:::o;451:83:4:-;495:7;517:12;;510:19;;451:83;:::o;324:35:2:-;;;;:::o;789:470:7:-;895:4;927:8;:15;936:5;927:15;;;;;;;;;;;;;;;;917:6;:25;;909:34;;;;;;967:7;:14;975:5;967:14;;;;;;;;;;;;;;;:26;982:10;967:26;;;;;;;;;;;;;;;;957:6;:36;;949:45;;;;;;1023:1;1008:17;;:3;:17;;;;1000:26;;;;;;1051:27;1071:6;1051:8;:15;1060:5;1051:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;1033:8;:15;1042:5;1033:15;;;;;;;;;;;;;;;:45;;;;1100:25;1118:6;1100:8;:13;1109:3;1100:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1084:8;:13;1093:3;1084:13;;;;;;;;;;;;;;;:41;;;;1160:38;1191:6;1160:7;:14;1168:5;1160:14;;;;;;;;;;;;;;;:26;1175:10;1160:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;1131:7;:14;1139:5;1131:14;;;;;;;;;;;;;;;:26;1146:10;1131:26;;;;;;;;;;;;;;;:67;;;;1225:3;1209:28;;1218:5;1209:28;;;1230:6;1209:28;;;;;;;;;;;;;;;;;;1250:4;1243:11;;789:470;;;;;:::o;255:25:2:-;;;;;;;;;;;;;:::o;287:31::-;;;;:::o;3742:432:7:-;3848:4;3862:16;3881:7;:19;3889:10;3881:19;;;;;;;;;;;;;;;:29;3901:8;3881:29;;;;;;;;;;;;;;;;3862:48;;3940:8;3920:16;:28;3916:165;;3990:1;3958:7;:19;3966:10;3958:19;;;;;;;;;;;;;;;:29;3978:8;3958:29;;;;;;;;;;;;;;;:33;;;;3916:165;;;4044:30;4057:16;4044:8;:12;;:30;;;;:::i;:::-;4012:7;:19;4020:10;4012:19;;;;;;;;;;;;;;;:29;4032:8;4012:29;;;;;;;;;;;;;;;:62;;;;3916:165;4112:8;4091:61;;4100:10;4091:61;;;4122:7;:19;4130:10;4122:19;;;;;;;;;;;;;;;:29;4142:8;4122:29;;;;;;;;;;;;;;;;4091:61;;;;;;;;;;;;;;;;;;4165:4;4158:11;;;3742:432;;;;:::o;1211:99:4:-;1267:7;1289:8;:16;1298:6;1289:16;;;;;;;;;;;;;;;;1282:23;;1211:99;;;:::o;221:28:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;47:24:0:-;;;;;;;;;;;;;:::o;688:321:4:-;751:4;781:8;:20;790:10;781:20;;;;;;;;;;;;;;;;771:6;:30;;763:39;;;;;;831:1;816:17;;:3;:17;;;;808:26;;;;;;864:32;889:6;864:8;:20;873:10;864:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;841:8;:20;850:10;841:20;;;;;;;;;;;;;;;:55;;;;918:25;936:6;918:8;:13;927:3;918:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;902:8;:13;911:3;902:13;;;;;;;;;;;;;;;:41;;;;975:3;954:33;;963:10;954:33;;;980:6;954:33;;;;;;;;;;;;;;;;;;1000:4;993:11;;688:321;;;;:::o;543:96:2:-;197:9:0;;;;;;;;;;;183:23;;:10;:23;;;175:32;;;;;;605:27:2;614:8;624:7;;605:8;:27::i;:::-;;543:96;:::o;2989:296:7:-;3090:4;3144:46;3178:11;3144:7;:19;3152:10;3144:19;;;;;;;;;;;;;;;:29;3164:8;3144:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3104:7;:19;3112:10;3104:19;;;;;;;;;;;;;;;:29;3124:8;3104:29;;;;;;;;;;;;;;;:87;;;;3223:8;3202:61;;3211:10;3202:61;;;3233:7;:19;3241:10;3233:19;;;;;;;;;;;;;;;:29;3253:8;3233:29;;;;;;;;;;;;;;;;3202:61;;;;;;;;;;;;;;;;;;3276:4;3269:11;;2989:296;;;;:::o;2384:153::-;2483:7;2507;:15;2515:6;2507:15;;;;;;;;;;;;;;;:25;2523:8;2507:25;;;;;;;;;;;;;;;;2500:32;;2384:153;;;;:::o;230:187:0:-;197:9;;;;;;;;;;;183:23;;:10;:23;;;175:32;;;;;;375:1;354:23;;:9;:23;;;;346:32;;;;;;401:9;389;;:21;;;;;;;;;;;;;;;;;;230:187;:::o;1122:116:3:-;1182:7;1210:2;1204;:8;;1197:16;;;;1231:2;1226;:7;1219:14;;1122:116;;;;:::o;1300:128::-;1360:9;1386:2;1381;:7;1377:11;;1406:2;1401:1;:7;;1394:15;;;;1422:1;1415:8;;1300:128;;;;:::o",
  "source": "pragma solidity ^0.5.10;\n\nimport \"zeppelin-solidity/contracts/token/ERC20/StandardToken.sol\";\nimport \"../helpers/Owned.sol\";\n\ncontract TweetherToken is StandardToken, Owned {\n    string public name = \"TweetherToken\";\n    string public symbol = \"TWE\";\n    uint8 public decimals = 0;\n\n    uint256 public FOR_ICO = 750000;\n    uint256 public FOR_FOUNDER = 250000;\n\n    constructor() public {\n        totalSupply_ = FOR_FOUNDER + FOR_ICO;\n        balances[msg.sender] = totalSupply_;\n    }\n\n    // send 75% of our token supply to ICO contract\n    function fundICO(address _icoAddr) onlyOwner public {\n        transfer(_icoAddr, FOR_ICO);\n    }\n}",
  "sourcePath": "/Users/sg99019ml/Abby/tweether/contracts/token/TweetherToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/token/TweetherToken.sol",
    "exportedSymbols": {
      "TweetherToken": [
        101
      ]
    },
    "id": 102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 49,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "id": 50,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 614,
        "src": "26:67:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/helpers/Owned.sol",
        "file": "../helpers/Owned.sol",
        "id": 51,
        "nodeType": "ImportDirective",
        "scope": 102,
        "sourceUnit": 45,
        "src": "94:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 52,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "152:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$613",
                "typeString": "contract StandardToken"
              }
            },
            "id": 53,
            "nodeType": "InheritanceSpecifier",
            "src": "152:13:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 44,
              "src": "167:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$44",
                "typeString": "contract Owned"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "167:5:2"
          }
        ],
        "contractDependencies": [
          44,
          291,
          334,
          366,
          613
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 101,
        "linearizedBaseContracts": [
          101,
          44,
          613,
          291,
          334,
          366
        ],
        "name": "TweetherToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 58,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "179:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 56,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "179:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5477656574686572546f6b656e",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "200:15:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0f04e49c08cd180d0c7a48f7fdaf2d163651d249c70c1e01f088bb63a88474c4",
                "typeString": "literal_string \"TweetherToken\""
              },
              "value": "TweetherToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "221:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 59,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "221:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545745",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "244:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0fdabb61edb2a9246e3e4d6c64ad06b5ed2d8b955654fca1d1a349b834555203",
                "typeString": "literal_string \"TWE\""
              },
              "value": "TWE"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 64,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "255:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 62,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "255:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 63,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "279:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "name": "FOR_ICO",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "287:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "373530303030",
              "id": 66,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "312:6:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_750000_by_1",
                "typeString": "int_const 750000"
              },
              "value": "750000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "name": "FOR_FOUNDER",
            "nodeType": "VariableDeclaration",
            "scope": 101,
            "src": "324:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 68,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "324:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "323530303030",
              "id": 69,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "353:6:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_250000_by_1",
                "typeString": "int_const 250000"
              },
              "value": "250000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "387:98:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "397:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "FOR_FOUNDER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "412:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "FOR_ICO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "426:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "412:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "397:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "397:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 79,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "443:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 628,
                          "src": "452:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "452:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "443:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "466:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "443:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "443:35:2"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:2"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:2"
            },
            "scope": 101,
            "src": "366:119:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "595:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "_icoAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "614:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "FOR_ICO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "624:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 94,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        278
                      ],
                      "referencedDeclaration": 278,
                      "src": "605:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "605:27:2"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 92,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 91,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23,
                  "src": "578:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "578:9:2"
              }
            ],
            "name": "fundICO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "_icoAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "560:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "559:18:2"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:0:2"
            },
            "scope": 101,
            "src": "543:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 102,
        "src": "126:515:2"
      }
    ],
    "src": "0:641:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/token/TweetherToken.sol",
      "exportedSymbols": {
        "TweetherToken": [
          101
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".10"
          ]
        },
        "id": 49,
        "name": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "attributes": {
          "SourceUnit": 614,
          "absolutePath": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
          "file": "zeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
          "scope": 102,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 50,
        "name": "ImportDirective",
        "src": "26:67:2"
      },
      {
        "attributes": {
          "SourceUnit": 45,
          "absolutePath": "project:/contracts/helpers/Owned.sol",
          "file": "../helpers/Owned.sol",
          "scope": 102,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 51,
        "name": "ImportDirective",
        "src": "94:30:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            44,
            291,
            334,
            366,
            613
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            101,
            44,
            613,
            291,
            334,
            366
          ],
          "name": "TweetherToken",
          "scope": 102
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "StandardToken",
                  "referencedDeclaration": 613,
                  "type": "contract StandardToken"
                },
                "id": 52,
                "name": "UserDefinedTypeName",
                "src": "152:13:2"
              }
            ],
            "id": 53,
            "name": "InheritanceSpecifier",
            "src": "152:13:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Owned",
                  "referencedDeclaration": 44,
                  "type": "contract Owned"
                },
                "id": 54,
                "name": "UserDefinedTypeName",
                "src": "167:5:2"
              }
            ],
            "id": 55,
            "name": "InheritanceSpecifier",
            "src": "167:5:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "name",
              "scope": 101,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 56,
                "name": "ElementaryTypeName",
                "src": "179:6:2"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "5477656574686572546f6b656e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"TweetherToken\"",
                  "value": "TweetherToken"
                },
                "id": 57,
                "name": "Literal",
                "src": "200:15:2"
              }
            ],
            "id": 58,
            "name": "VariableDeclaration",
            "src": "179:36:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "symbol",
              "scope": 101,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 59,
                "name": "ElementaryTypeName",
                "src": "221:6:2"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "545745",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"TWE\"",
                  "value": "TWE"
                },
                "id": 60,
                "name": "Literal",
                "src": "244:5:2"
              }
            ],
            "id": 61,
            "name": "VariableDeclaration",
            "src": "221:28:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "decimals",
              "scope": 101,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 62,
                "name": "ElementaryTypeName",
                "src": "255:5:2"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 63,
                "name": "Literal",
                "src": "279:1:2"
              }
            ],
            "id": 64,
            "name": "VariableDeclaration",
            "src": "255:25:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "FOR_ICO",
              "scope": 101,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 65,
                "name": "ElementaryTypeName",
                "src": "287:7:2"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "373530303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 750000",
                  "value": "750000"
                },
                "id": 66,
                "name": "Literal",
                "src": "312:6:2"
              }
            ],
            "id": 67,
            "name": "VariableDeclaration",
            "src": "287:31:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "FOR_FOUNDER",
              "scope": 101,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 68,
                "name": "ElementaryTypeName",
                "src": "324:7:2"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "323530303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 250000",
                  "value": "250000"
                },
                "id": 69,
                "name": "Literal",
                "src": "353:6:2"
              }
            ],
            "id": 70,
            "name": "VariableDeclaration",
            "src": "324:35:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 101,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 71,
                "name": "ParameterList",
                "src": "377:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 72,
                "name": "ParameterList",
                "src": "387:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 210,
                              "type": "uint256",
                              "value": "totalSupply_"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "397:12:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 70,
                                  "type": "uint256",
                                  "value": "FOR_FOUNDER"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "412:11:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 67,
                                  "type": "uint256",
                                  "value": "FOR_ICO"
                                },
                                "id": 75,
                                "name": "Identifier",
                                "src": "426:7:2"
                              }
                            ],
                            "id": 76,
                            "name": "BinaryOperation",
                            "src": "412:21:2"
                          }
                        ],
                        "id": 77,
                        "name": "Assignment",
                        "src": "397:36:2"
                      }
                    ],
                    "id": 78,
                    "name": "ExpressionStatement",
                    "src": "397:36:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 208,
                                  "type": "mapping(address => uint256)",
                                  "value": "balances"
                                },
                                "id": 79,
                                "name": "Identifier",
                                "src": "443:8:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 628,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 80,
                                    "name": "Identifier",
                                    "src": "452:3:2"
                                  }
                                ],
                                "id": 81,
                                "name": "MemberAccess",
                                "src": "452:10:2"
                              }
                            ],
                            "id": 82,
                            "name": "IndexAccess",
                            "src": "443:20:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 210,
                              "type": "uint256",
                              "value": "totalSupply_"
                            },
                            "id": 83,
                            "name": "Identifier",
                            "src": "466:12:2"
                          }
                        ],
                        "id": 84,
                        "name": "Assignment",
                        "src": "443:35:2"
                      }
                    ],
                    "id": 85,
                    "name": "ExpressionStatement",
                    "src": "443:35:2"
                  }
                ],
                "id": 86,
                "name": "Block",
                "src": "387:98:2"
              }
            ],
            "id": 87,
            "name": "FunctionDefinition",
            "src": "366:119:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "fundICO",
              "scope": 101,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_icoAddr",
                      "scope": 100,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 88,
                        "name": "ElementaryTypeName",
                        "src": "560:7:2"
                      }
                    ],
                    "id": 89,
                    "name": "VariableDeclaration",
                    "src": "560:16:2"
                  }
                ],
                "id": 90,
                "name": "ParameterList",
                "src": "559:18:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 93,
                "name": "ParameterList",
                "src": "595:0:2"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 23,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 91,
                    "name": "Identifier",
                    "src": "578:9:2"
                  }
                ],
                "id": 92,
                "name": "ModifierInvocation",
                "src": "578:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                278
                              ],
                              "referencedDeclaration": 278,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "transfer"
                            },
                            "id": 94,
                            "name": "Identifier",
                            "src": "605:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 89,
                              "type": "address",
                              "value": "_icoAddr"
                            },
                            "id": 95,
                            "name": "Identifier",
                            "src": "614:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 67,
                              "type": "uint256",
                              "value": "FOR_ICO"
                            },
                            "id": 96,
                            "name": "Identifier",
                            "src": "624:7:2"
                          }
                        ],
                        "id": 97,
                        "name": "FunctionCall",
                        "src": "605:27:2"
                      }
                    ],
                    "id": 98,
                    "name": "ExpressionStatement",
                    "src": "605:27:2"
                  }
                ],
                "id": 99,
                "name": "Block",
                "src": "595:44:2"
              }
            ],
            "id": 100,
            "name": "FunctionDefinition",
            "src": "543:96:2"
          }
        ],
        "id": 101,
        "name": "ContractDefinition",
        "src": "126:515:2"
      }
    ],
    "id": 102,
    "name": "SourceUnit",
    "src": "0:641:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {
    "1631084710917": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0153b067Ba909EcABD317e88D4c630f1AE89734e",
      "transactionHash": "0x3085055a52053694830b891577ec26cdc1ba7365165e6170bb3e628f1023abb5"
    },
    "1631122962744": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xdd540aA63A85a3e59986D6207a20A8391c159c85",
      "transactionHash": "0xfa61dec8e04988206fac8989043df51961ca8cecbe4320d9aac5b552835e2e53"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-08T17:46:57.146Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}